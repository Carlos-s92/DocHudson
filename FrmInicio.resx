<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Btn6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vgAADr4B6kKxwAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQpSURBVFhH7VVf
        bFNVHO7f9fbeu3Zrb/9366Bljq6DbXaZgEAIhTCRTVwhxphFfQCNzvkPk+2BFh60CSY++YIPvBjDEAhC
        MjBxhhnjA8E/iXE1GmIUo5KgKOsymHOf55y73t7b3jEafeBhX/LlnN/v/M79vvu7p6eGZSzjXkHM5TD/
        QUb8Fwqc8RcyxgirxvDgnggwOQLkD8r86hngk3VLcn6iG9OnIyicDGPfDnGOPkt+ZHXIZvatAb7Llfj1
        q7qCepw5G2MGRvY6aCey8iOrQzazf21JfHIY+HSzrpgeb51r/h8MLHRg4JEO9G4KYOChEM7kWtG70Ye9
        WwPIv9uhxJR0Tmvo/ImUpDawKD2+wDtk1EU283QT8MUAK9yQqMWjG+uRSrpQ76hBLMTDKdqUmK6fPhwt
        1T5Ypxh40hNk3PB8Bid/BS7/JXMs/zN4sZaeETcVLEc281SYtZPMldamktREPc4fWQ2z2aTExfVirfoT
        qA2cuVYyQNnz2ADq3e4cUyyDxgDlYH+IiRXj9CaXEnM2i6b2uV6ProFRVQco3780iVpn3SzZYyfUQGPg
        9vk4/vk4yQS3djqxqoHHni1eJZ69kNDUznxQ+hWoDbz1g9YA5frtO2G3i4NMVYU7foK3hxrB261s7nXZ
        lUNIa8sPodrAa98CR68Cn90oGTg6NgGX5J0me81UuAjFwGCfpBg4dSjKOH+xG8/ukticHrriIaSHb7FD
        GFmfwuZXcgpTB3LYtkBOqKXmd8vSMpiBz4+049C2pgp++Wa7YqqCE+vITdioMXAsmsDjUmBRtvEiNaC5
        L5iBS6/HMdTlr+DlN+L64oR/f9jGxNUG0uEm9nko0+EVmGjtYlzjFJQ81SQ0GPb7G9MrOf77LSvrqntz
        wrmP7kfhVEOFgXEidi7eyTjemlQMUOG58Q7Ql9UYiHD81e6geJdv/gD7hdweayHisnC5gaJgOdudrPXa
        DiwgSzcXH/TjsSB6kgJqrCbYCHu6BPxEcmoxPZYbOBiOQrJxMBmNbMyQmOZpDdWUpWUoBm6MhhDx2eCW
        fGhpbSdcS+ZelqNrRTE9qg1kG2LEfA1WRO9DvK0TTdFmFh8m+XID9FJQtwaiKM43t7SRC4OHjbNjVUuC
        5crrliIV93gDsFisZPSzuKyGXUjZ4eERTE1N4+bNAl586QAr9gcb0Ne3Gw/v6mVziXTkhaGX8du166z2
        TvwmfwVmi4W9udVqxXvHT5CxBqsTHSx//fc/QTWpNjVQ0QFBEGcD4UY4HE7GQCgCnhfoHa6pW4o+atzj
        Bcdx7DP6guz0q1lxJVNYjUZjnhfEGa8/CK8vADsv3CK5Sboml9wV+k0m05RL8sAXCJF/QQkkLpC85gZc
        DG5SPEpEpwkLZH6c5FzyUlVIk/1XyDi7MPaz7DKWce/AYPgXKFhSaND74JQAAAAASUVORK5CYII=
</value>
  </data>
</root>